--VITTOR

create or replace NONEDITIONABLE TRIGGER TG_INS_HLCL
BEFORE DELETE OR UPDATE ON HLOCAL
FOR EACH ROW
DECLARE
V_TABELA VARCHAR (30) := 'HLOCAL';
V_USU_BD VARCHAR(30);
V_USU_SO VARCHAR(255) := SYS_CONTEXT ('USERENV','OS_USER');
V_IP CHAR(15) := SYS_CONTEXT ('USERENV','IP_ADDRESS');
V_MAC varchar(100) := SYS_CONTEXT ('USERENV', 'TERMINAL');
BEGIN
SELECT USER INTO V_USU_BD FROM DUAL;
IF DELETING THEN
AUDITOR.PRC_INS(V_TABELA, 'D','HLCL_ID',:OLD.HLCL_ID, NULL, :OLD.HLCL_ID, NULL, :OLD.HLCL_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
AUDITOR.PRC_INS(V_TABELA, 'D','HLCL_KM', :OLD.HLCL_KM, NULL, :OLD.HLCL_ID, NULL, :OLD.HLCL_DT_ENTRADA,v_usu_bd, v_usu_so, v_ip, v_mac);
AUDITOR.PRC_INS(V_TABELA, 'D','HLCL_DT_ENTRADA',:OLD.HLCL_DT_ENTRADA, NULL, :OLD.HLCL_ID, NULL, :OLD.HLCL_DT_ENTRADA,v_usu_bd ,v_usu_so, v_ip, v_mac);
END IF;

IF UPDATING THEN
    IF(:OLD.HLCL_ID <> :NEW.HLCL_ID) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HLCL_ID',:OLD.HLCL_ID, :NEW.HLCL_ID, :OLD.HLCL_ID, NULL, :OLD.HLCL_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
    IF(:OLD.HLCL_KM <> :NEW.HLCL_KM) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HLCL_KM',:OLD.HLCL_KM, :NEW.HLCL_KM, :OLD.HLCL_ID, NULL, :OLD.HLCL_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
     IF(:OLD.HLCL_DT_ENTRADA <> :NEW.HLCL_DT_ENTRADA) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HLCL_DT_ENTRADA', :OLD.HLCL_DT_ENTRADA, :NEW.HLCL_DT_ENTRADA, :OLD.HLCL_ID, NULL, :OLD.HLCL_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
END IF;
END;


--------------------------------------------------------------------------------------------------------------------------------------------


create or replace NONEDITIONABLE TRIGGER TG_INS_HSNT
BEFORE DELETE OR UPDATE ON HSENTIDO
FOR EACH ROW
DECLARE
V_TABELA VARCHAR (30) := 'HSENTIDO';
V_USU_BD VARCHAR(30);
V_USU_SO VARCHAR(255) := SYS_CONTEXT ('USERENV','OS_USER');
V_IP CHAR(15) := SYS_CONTEXT ('USERENV','IP_ADDRESS');
V_MAC varchar(100) := SYS_CONTEXT ('USERENV', 'TERMINAL');
BEGIN
SELECT USER INTO V_USU_BD FROM DUAL;
IF DELETING THEN
AUDITOR.PRC_INS(V_TABELA, 'D','HSNT_ID',:OLD.HSNT_ID, NULL, :OLD.HSNT_ID, NULL, :OLD.HSNT_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
AUDITOR.PRC_INS(V_TABELA, 'D','HSNT_DESCRICAO', :OLD.HSNT_DESCRICAO, NULL, :OLD.HSNT_ID, NULL, :OLD.HSNT_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
AUDITOR.PRC_INS(V_TABELA, 'D','HSNT_DT_ENTRADA',:OLD.HSNT_DT_ENTRADA, NULL, :OLD.HSNT_ID, NULL, :OLD.HSNT_DT_ENTRADA,v_usu_bd ,v_usu_so, v_ip, v_mac);
END IF;

IF UPDATING THEN
    IF(:OLD.HSNT_ID <> :NEW.HSNT_ID) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HSNT_ID',:OLD.HSNT_ID, :NEW.HSNT_ID, :OLD.HSNT_ID, NULL, :OLD.HSNT_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
    IF(:OLD.HSNT_DESCRICAO <> :NEW.HSNT_DESCRICAO) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HSNT_DESCRICAO',:OLD.HSNT_DESCRICAO, :NEW.HSNT_DESCRICAO, :OLD.HSNT_ID, NULL, :OLD.HSNT_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
     IF(:OLD.HSNT_DT_ENTRADA <> :NEW.HSNT_DT_ENTRADA) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HSNT_DT_ENTRADA', :OLD.HSNT_DT_ENTRADA, :NEW.HSNT_DT_ENTRADA, :OLD.HSNT_ID, NULL, :OLD.HSNT_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
END IF;
END;

--------------------------------------------------------------------------------------------------------------------------------------------


create or replace NONEDITIONABLE TRIGGER TG_INS_HGOC
BEFORE DELETE OR UPDATE ON HGRAVIDADE_OCORRENCIAS
FOR EACH ROW
DECLARE
V_TABELA VARCHAR (30) := 'HGRAVIDADE_OCORRENCIAS';
V_USU_BD VARCHAR(30);
V_USU_SO VARCHAR(255) := SYS_CONTEXT ('USERENV','OS_USER');
V_IP CHAR(15) := SYS_CONTEXT ('USERENV','IP_ADDRESS');
V_MAC varchar(100) := SYS_CONTEXT ('USERENV', 'TERMINAL');
BEGIN
SELECT USER INTO V_USU_BD FROM DUAL;
IF DELETING THEN
AUDITOR.PRC_INS(V_TABELA, 'D','HGOC_GRV_ID',:OLD.HGOC_GRV_ID, NULL, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
AUDITOR.PRC_INS(V_TABELA, 'D','HGOC_OCR_ID',:OLD.HGOC_OCR_ID, NULL, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
AUDITOR.PRC_INS(V_TABELA, 'D','HGOC_QTDE_VITIMAS', :OLD.HGOC_QTDE_VITIMAS, NULL, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
AUDITOR.PRC_INS(V_TABELA, 'D','HGOC_DT_ENTRADA',:OLD.HGOC_DT_ENTRADA, NULL, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA,v_usu_bd ,v_usu_so, v_ip, v_mac);
END IF;

IF UPDATING THEN
    IF(:OLD.HGOC_GRV_ID <> :NEW.HGOC_GRV_ID) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HGOC_GRV_ID',:OLD.HGOC_GRV_ID, :NEW.HGOC_GRV_ID, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
    IF(:OLD.HGOC_OCR_ID <> :NEW.HGOC_OCR_ID) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HGOC_OCR_ID',:OLD.HGOC_OCR_ID, :NEW.HGOC_OCR_ID, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
     IF(:OLD.HGOC_QTDE_VITIMAS <> :NEW.HGOC_QTDE_VITIMAS) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HGOC_QTDE_VITIMAS', :OLD.HGOC_QTDE_VITIMAS, :NEW.HGOC_QTDE_VITIMAS, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
    IF(:OLD.HGOC_DT_ENTRADA <> :NEW.HGOC_DT_ENTRADA) THEN
       AUDITOR.PRC_INS (V_TABELA, 'U','HGOC_DT_ENTRADA', :OLD.HGOC_DT_ENTRADA, :NEW.HGOC_DT_ENTRADA, :OLD.HGOC_GRV_ID, :OLD.HGOC_OCR_ID, :OLD.HGOC_DT_ENTRADA, v_usu_bd, v_usu_so, v_ip, v_mac);
END IF;
END IF;
END;
